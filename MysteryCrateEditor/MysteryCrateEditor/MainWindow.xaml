<Window x:Class="MysteryCrateEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MysteryCrateEditor"
        xmlns:sys="clr-namespace:System;assembly=mscorelib"
        xmlns:converters="clr-namespace:MysteryCrateEditor.Libraries.MysteryCrate.Converters"
        xmlns:itemData="clr-namespace:MysteryCrateEditor.Libraries.MysteryCrate.Rewards.ItemData"
        xmlns:crate="clr-namespace:MysteryCrateEditor.Libraries.MysteryCrates"
        mc:Ignorable="d"
        xmlns:toolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
        Title="Crate Editor" Height="430.919" Width="790.181" MinWidth="700" MinHeight="275" Foreground="White" Loaded="OnLoaded" Closing="WindowClosing">
    <Window.Resources>
        <Style TargetType="ListBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="Expander">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <converters:NullToVisibilityConverter x:Key="nullToVis"/>
        <converters:NullToBoolConverter x:Key="nullToBool"/>
        <converters:VisibleParamter x:Key="visibleParameter"/>
        <converters:BoolToVis x:Key="boolToVis"/>
    </Window.Resources>
    <Grid Background="#FBFBFF">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200*"/>
            <ColumnDefinition Width="280*"/>
            <ColumnDefinition Width="280*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel Orientation="Vertical" Background="#040F16">
                <ListBox x:Name="CrateList" Background="Transparent" VerticalAlignment="Stretch">
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="Copy"/>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel DataContext="{Binding}" Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </ScrollViewer>
        <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto">
            <StackPanel IsEnabled="{Binding SelectedValue, Converter={StaticResource nullToBool}, ElementName=CrateList}" Background="#0B4F6C" x:Name="CratePanel" DataContext="{Binding SelectedValue, ElementName=CrateList}">
                <TextBlock Text="Crate Type"/>
                <CheckBox IsChecked="{Binding Preview}" Content="Is Preview Enabled?"/>
                <ComboBox x:Name="CrateTypeComboBox" SelectedItem="{Binding Type}"/>
                <Expander Header="Name">
                    <StackPanel>
                        <TextBlock Text="Name"/>
                        <TextBox Text="{Binding Name}"/>
                        <TextBlock Text="Display Name"/>
                        <TextBox Text="{Binding DisplayName}"/>
                    </StackPanel>
                </Expander>
                <Expander Header="Item">
                    <StackPanel>
                        <TextBlock Text="Item"/>
                        <TextBox Text="{Binding Key.Item}"/>
                        <TextBlock Text="Name"/>
                        <TextBox Text="{Binding Key.Name}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Lore:"/>
                            <Button Content="Add" Click="AddLoreButton"/>
                            <Button Content="Remove" Click="RemoveLoreButton" IsEnabled="{Binding ElementName=KeyLoreListBox,Path=SelectedItem,Converter={StaticResource nullToBool}}"/>
                        </StackPanel>
                        <ListBox x:Name="KeyLoreListBox" Height="60" ItemsSource="{Binding Key.EditLore}" Background="Transparent">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Lore}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Enchantment"/>
                            <Button Content="Add" Click="AddKeyEnchant"/>
                            <Button Content="Remove" Click="RemoveKeyEnchant" IsEnabled="{Binding ElementName=KeyEnchantsListBox,Path=SelectedItem,Converter={StaticResource nullToBool}}"/>
                        </StackPanel>
                        <ListBox x:Name="KeyEnchantsListBox" Height="60" ItemsSource="{Binding Key.Enchants}" Background="Transparent">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBox Width="70" Text="{Binding Strength}"/>
                                        <ComboBox Width="175" ItemsSource="{Binding Source={converters:Enum {x:Type itemData:MinecraftEnchants}}}" SelectedItem="{Binding Enchant}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </Expander>
                <Expander Header="Effects">
                    <StackPanel>
                        <TextBlock Text="Effects"/>
                        <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                            <StackPanel Orientation="Vertical" Width="132">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="On Open"/>
                                    <Button Content="Add" Click="AddOpenEffect_Click"/>
                                    <Button Content="Remove" Click="RemoveOpenEffect" IsEnabled="{Binding SelectedItem, ElementName=OpenEffectsList,Converter={StaticResource nullToBool}}"/>
                                </StackPanel>
                                <ListBox x:Name="OpenEffectsList" Background="Transparent" ItemsSource="{Binding Effect.onOpenEffects}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding Source={converters:Enum {x:Type crate:CrateEffect}}}" SelectedItem="{Binding Effect}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Width="132">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Dormant"/>
                                    <Button Content="Add" Click="AddDormantEffect_Click"/>
                                    <Button Content="Remove" Click="RemoveDormantEffect" IsEnabled="{Binding SelectedItem, ElementName=DormantEffectsList,Converter={StaticResource nullToBool}}"/>
                                </StackPanel>
                                <ListBox x:Name="DormantEffectsList" ItemsSource="{Binding Effect.dormantEffects}" Background="Transparent">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding Source={converters:Enum {x:Type crate:CrateEffect}}}" SelectedItem="{Binding Effect}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Expander>
                <Expander Header="Messages">
                    <StackPanel>
                        <TextBlock Text="On Open Message:"/>
                        <TextBox Text="{Binding Message.OnOpen}"/>
                        <TextBlock Text="Broadcast:"/>
                        <TextBox Text="{Binding Message.Broadcast}"/>
                    </StackPanel>
                </Expander>
                <Expander Header="Shop">
                    <Grid>
                        <CheckBox IsChecked="{Binding Shop.Enabled}" Content="Shop Enabled"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="Price:"/>
                            <TextBox HorizontalAlignment="Right" Width="100" IsEnabled="{Binding Shop.Enabled}" Text="{Binding Shop.Buy}" Height="18"/>
                        </StackPanel>
                    </Grid>
                </Expander>
                <Expander Header="Chance">
                    <StackPanel>
                        <TextBlock Text="Chance settings:"/>
                        <CheckBox Content="Add rarity tags" IsChecked="{Binding RaritiesEnabled}" x:Name="RarityTags"/>
                        <StackPanel x:Name="RaritiesStackPanel" Visibility="{Binding IsChecked, Converter={StaticResource boolToVis}, ElementName=RarityTags}">
                            <TextBlock Text="Rarities"/>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button Content="Add Rarity" Click="AddRarity"/>
                                <Button Content="Remove" Click="RemoveRarity" IsEnabled="{Binding SelectedItem, Converter={StaticResource nullToBool}, ElementName=RaritiesListBox}"/>
                            </StackPanel>
                            <ListBox Background="Transparent" x:Name="RaritiesListBox" ItemsSource="{Binding Rarities}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="80*"/>
                                                <ColumnDefinition Width="200*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Text="{Binding Value}" Width="50"/>
                                            <TextBox Text="{Binding Name}" Grid.Column="1" Width="150"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </StackPanel>
                </Expander>
                
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Minimum:"/>
                    <TextBox Width="25" Text="{Binding MinimumRewards}"/>
                    <TextBlock Text="Maximum:"/>
                    <TextBox Width="25" Text="{Binding MaximumRewards}"/>
                </StackPanel>
                <Grid>
                    <TextBlock Text="Rewards:"/>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <TextBlock Text="{Binding Items.Count, ElementName=RewardsListBox}"/>
                        <Button Width="40" Click="AddNewReward" Height="20">
                            <fa:FontAwesome Icon="Plus"/>
                        </Button>
                        <Button Width="40" Click="DuplicateSelectedReward" IsEnabled="{Binding SelectedItem, Converter={StaticResource nullToBool}, ElementName=RewardsListBox}">
                            <fa:FontAwesome Icon="Clone"/>
                        </Button>
                        <Button Width="40" Click="RemoveSelectedReward" IsEnabled="{Binding SelectedItem, Converter={StaticResource nullToBool}, ElementName=RewardsListBox}">
                            <fa:FontAwesome Icon="Remove"/>
                        </Button>
                    </StackPanel>
                </Grid>
                <ListBox Background="Transparent" ItemsSource="{Binding Rewards}" x:Name="RewardsListBox">
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="Copy"/>
                            <MenuItem Command="Paste"/>
                            <MenuItem Command="Cut"/>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </ScrollViewer>
        <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto">
            <StackPanel IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=RewardPanel}"  x:Name="RewardPanel" Background="#01BAEF" DataContext="{Binding SelectedValue, ElementName=RewardsListBox}">
                <TextBlock Text="Name"/>
                <TextBox Text="{Binding Name}"/>
                <StackPanel Orientation="Horizontal">
                    <Button Content="Macros" Click="InsertMacro"/>
                    <Button Content="Chance" Click="NewChance" IsEnabled="{Binding NeedsChance}"/>
                    <Button Content="Command" Click="NewCommand"/>
                    <Button Content="Item" Click="NewItem"/>
                    <Button Content="Display" Click="Display"/>
                    <Button IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=RewardPanel}" Content="Remove" Click="RemoveSelected" Height="25"/>
                </StackPanel>
                <ListBox HorizontalAlignment="Stretch" x:Name="RewardTagsBox" ItemsSource="{Binding RewardTags}" Background="Transparent">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel HorizontalAlignment="Stretch">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="Copy"/>
                                        <MenuItem Command="Paste"/>
                                        <MenuItem Command="Cut"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <TextBlock Text="{Binding TagName}"/>
                                <StackPanel x:Name="ChanceStackPanel" Visibility="{Binding TagName, ConverterParameter=chance, Converter={StaticResource visibleParameter}}">
                                    <TextBox Text="{Binding Chance}" Width="50"/>
                                </StackPanel>
                                <Grid HorizontalAlignment="Stretch" x:Name="CmdStackPanel" Visibility="{Binding TagName, ConverterParameter=cmd, Converter={StaticResource visibleParameter}}">
                                    <TextBox HorizontalAlignment="Stretch" Text="{Binding Command}"/>
                                </Grid>
                                <Grid Visibility="{Binding TagName, ConverterParameter=item|display, Converter={StaticResource visibleParameter}}">
                                    <Grid.RowDefinitions>
                                        <!--Row definitions for dayzzz-->
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="120*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Item: "/>
                                    <TextBox Text="{Binding Item}" Grid.Column="1"/>
                                    <TextBlock Text="Amount: " Grid.Column="2"/>
                                    <TextBox Text="{Binding Amount}" Width="75" Grid.Column="3"/>
                                    <TextBlock Text="Name: " Grid.Row="2"/>
                                    <TextBox Text="{Binding Name}" Width="200" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="4"/>
                                    <TextBlock Text="Lore" Grid.Row="3"/>
                                    <Button Content="Add Lore" Click="AddLore" Grid.Row="3" Grid.Column="1"/>
                                    <Button Content="Remove Lore" Grid.Row="3" Grid.Column="2" Click="RemoveLore" DataContext="{Binding ElementName=LoreListBox}"
                                            IsEnabled="{Binding ElementName=LoreListBox,Path=SelectedItem,Converter={StaticResource nullToBool}}"/>
                                    <ListBox x:Name="LoreListBox" ItemsSource="{Binding EditLore}" Background="Transparent" Grid.Row="4" Grid.ColumnSpan="4"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox Width="250" HorizontalAlignment="Stretch" Text="{Binding Lore}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <TextBlock Text="Enchants" Grid.Row="5"/>
                                    <Button Content="Add Enchant" Grid.Row="5" Grid.Column="2" x:Name="AddEnchantButton" Click="AddEnchantButton"/>
                                    <Button Content="Remove Enchant" Grid.Row="5" Grid.Column="3" x:Name="RemoveEnchantButton" Click="RemoveEnchantButton" DataContext="{Binding ElementName=EnchantsListBox}" IsEnabled="{Binding SelectedItem, ElementName=EnchantsListBox, Converter={StaticResource nullToBool}}"/>
                                    <ListBox x:Name="EnchantsListBox" ItemsSource="{Binding Enchants}" Background="Transparent" Grid.Row="6" Grid.ColumnSpan="4">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox Width="70" Text="{Binding Strength}"/>
                                                    <ComboBox Width="175" ItemsSource="{Binding Source={converters:Enum {x:Type itemData:MinecraftEnchants}}}" SelectedItem="{Binding Enchant}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Button Grid.Row="7" Content="Add Color" Click="AddOrRemoveColorData"/>
                                    <toolkit:ColorPicker Visibility="{Binding ElementName=ColorPicker, Converter={StaticResource nullToVis}, Path=DataContext}" x:Name="ColorPicker" DataContext="{Binding Colors}" SelectedColor="{Binding Color}" Grid.Row="8" Grid.ColumnSpan="3"/>
                                </Grid>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </ScrollViewer>
        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Grid.Row="1">
            <Button Width="40" Click="ExportAll_Click" ToolTip="Export all crates to a file">
                <fa:FontAwesome Icon="ArrowDown"/>
            </Button>
            <Button Width="40" HorizontalAlignment="Right" Click="SaveAll_Click" ToolTip="Saves all crates">
                <fa:FontAwesome Icon="FloppyOutline"/>
            </Button>
            <Button x:Name="Button" Width="40" Click="AddCrate" ToolTip="Adds a new crate">
                <fa:FontAwesome Icon="Plus"/>
            </Button>
        </StackPanel>
        <StackPanel Grid.Column="1" Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">
            <Button Width="40" IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=CratePanel}" x:Name="button" Click="StatsButtonClick" ToolTip="Displays stats on the current crate">
                <fa:FontAwesome Icon="Info"/>
            </Button>
            <Button Width="40" IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=CratePanel}" Click="ExportCrate" ToolTip="Exports just this crate">
                <fa:FontAwesome Icon="ArrowDown"/>
            </Button>
            <Button Width="40" IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=CratePanel}" Click="SaveCrate" ToolTip="Saves just this crate">
                <fa:FontAwesome Icon="Save"/>
            </Button>
            <Button Width="40" IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=CratePanel}" Click="DeleteCrate" ToolTip="Deletes the current crate">
                <fa:FontAwesome Icon="Trash"/>
            </Button>
            <Button Width="40" IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=CratePanel}" Click="SortCrate" ToolTip="Sorts the crate by rarity">
                <fa:FontAwesome Icon="Sort"/>
            </Button>
        </StackPanel>
        <StackPanel Grid.Column="2" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=RewardPanel}" Content="Edit Macros" Click="EditMacros"/>
        </StackPanel>
    </Grid>
</Window>
