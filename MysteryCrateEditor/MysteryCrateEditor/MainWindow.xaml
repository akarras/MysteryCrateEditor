<Window x:Class="MysteryCrateEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MysteryCrateEditor"
        xmlns:sys="clr-namespace:System;assembly=mscorelib"
        xmlns:converters="clr-namespace:MysteryCrateEditor.Libraries.MysteryCrate.Converters"
        xmlns:itemData="clr-namespace:MysteryCrateEditor.Libraries.MysteryCrate.Rewards.ItemData"
        mc:Ignorable="d"
        Title="Crate Editor" Height="430.919" Width="790.181" MinWidth="700" MinHeight="275" Foreground="White" Loaded="OnLoaded" Closing="WindowClosing">
    <Window.Resources>

        <Style TargetType="ListBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <converters:NullToVisibilityConverter x:Key="nullToVis"/>
        <converters:NullToBoolConverter x:Key="nullToBool"/>
        <converters:VisibleParamter x:Key="visibleParameter"/>
        <converters:BoolToVis x:Key="boolToVis"/>

    </Window.Resources>
    <Grid Background="#FBFBFF">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200*"/>
            <ColumnDefinition Width="280*"/>
            <ColumnDefinition Width="280*"/>
        </Grid.ColumnDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel Orientation="Vertical" Background="#040F16">
                <ListBox x:Name="CrateList" Background="Transparent" VerticalAlignment="Stretch">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel DataContext="{Binding}" Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </ScrollViewer>
        <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto">
            <StackPanel IsEnabled="{Binding SelectedValue, Converter={StaticResource nullToBool}, ElementName=CrateList}" Background="#0B4F6C" x:Name="CratePanel" DataContext="{Binding SelectedValue, ElementName=CrateList}">
                <TextBlock Text="Crate Type"/>
                <ComboBox x:Name="CrateTypeComboBox" SelectedItem="{Binding Type}"/>
                <TextBlock Text="Name"/>
                <TextBox Text="{Binding Name}"/>
                <TextBlock Text="Display Name"/>
                <TextBox Text="{Binding DisplayName}"/>
                <CheckBox IsChecked="{Binding Preview}" Content="Is Preview Enabled?"/>
                <Grid>
                    <CheckBox IsChecked="{Binding Shop.Enabled}" Content="Shop Enabled"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock Text="Price:"/>
                        <TextBox HorizontalAlignment="Right" Width="100" IsEnabled="{Binding Shop.Enabled}" Text="{Binding Shop.Buy}" Height="18"/>
                    </StackPanel>
                </Grid>
                <TextBlock Text="Chance settings:"/>
                <CheckBox Content="Add rarity tags" IsChecked="{Binding RaritiesEnabled}" x:Name="RarityTags"/>
                <StackPanel x:Name="RaritiesStackPanel" Visibility="{Binding IsChecked, Converter={StaticResource boolToVis}, ElementName=RarityTags}">
                    <TextBlock Text="Rarities"/>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Content="Add Rarity" Click="AddRarity"/>
                        <Button Content="Remove" Click="RemoveRarity" IsEnabled="{Binding SelectedItem, Converter={StaticResource nullToBool}, ElementName=RaritiesListBox}"/>
                    </StackPanel>
                    <ListBox Background="Transparent" x:Name="RaritiesListBox" ItemsSource="{Binding Rarities}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80*"/>
                                        <ColumnDefinition Width="200*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding Value}" Width="50"/>
                                    <TextBox Text="{Binding Name}" Grid.Column="1" Width="150"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
                <Grid>
                    <TextBlock Text="Rewards:"/>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Click="AddNewReward" Content="Add Reward" Height="20"/>
                        <Button Click="DuplicateSelectedReward" Content="Duplicate" IsEnabled="{Binding SelectedItem, Converter={StaticResource nullToBool}, ElementName=RewardsListBox}"/>
                        <Button Click="RemoveSelectedReward" Content="Remove" IsEnabled="{Binding SelectedItem, Converter={StaticResource nullToBool}, ElementName=RewardsListBox}"/>
                    </StackPanel>
                </Grid>
                <ListBox Background="Transparent" ItemsSource="{Binding Rewards}" x:Name="RewardsListBox">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </ScrollViewer>
        <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto">
            <StackPanel IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=RewardPanel}"  x:Name="RewardPanel" Background="#01BAEF" DataContext="{Binding SelectedValue, ElementName=RewardsListBox}">
                <TextBlock Text="Name"/>
                <TextBox Text="{Binding Name}"/>
                <StackPanel Orientation="Horizontal">
                    <Button Content="Macros" Click="InsertMacro"/>
                    <Button Content="Chance" Click="NewChance" IsEnabled="{Binding NeedsChance}"/>
                    <Button Content="Command" Click="NewCommand"/>
                    <Button Content="Item" Click="NewItem"/>
                    <Button Content="Display" Click="Display"/>
                    <Button IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=RewardPanel}" Content="Remove" Click="RemoveSelected" Height="25"/>
                </StackPanel>
                <ListBox HorizontalAlignment="Stretch" x:Name="RewardTagsBox" ItemsSource="{Binding RewardTags}" Background="Transparent">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel HorizontalAlignment="Stretch">
                                <TextBlock Text="{Binding TagName}"/>
                                <StackPanel x:Name="ChanceStackPanel" Visibility="{Binding TagName, ConverterParameter=chance, Converter={StaticResource visibleParameter}}">
                                    <TextBox Text="{Binding Chance}" Width="50"/>
                                </StackPanel>
                                <Grid HorizontalAlignment="Stretch" x:Name="CmdStackPanel" Visibility="{Binding TagName, ConverterParameter=cmd, Converter={StaticResource visibleParameter}}">
                                    <TextBox HorizontalAlignment="Stretch" Text="{Binding Command}"/>
                                </Grid>
                                <Grid Visibility="{Binding TagName, ConverterParameter=item, Converter={StaticResource visibleParameter}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="120*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Item: "/>
                                    <TextBox Text="{Binding Item}" Grid.Column="1"/>
                                    <TextBlock Text="Amount: " Grid.Column="2"/>
                                    <TextBox Text="{Binding Amount}" Width="75" Grid.Column="3"/>
                                    <TextBlock Text="Name: " Grid.Row="2"/>
                                    <TextBox Text="{Binding Name}" Width="200" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="4"/>
                                    <TextBlock Text="Lore" Grid.Row="3"/>
                                    <Button Content="Add Lore" Click="AddLore" Grid.Row="3" Grid.Column="1"/>
                                    <Button Content="Remove Lore" Grid.Row="3" Grid.Column="2" Click="RemoveLore" DataContext="{Binding ElementName=LoreListBox}"
                                            IsEnabled="{Binding ElementName=LoreListBox,Path=SelectedItem,Converter={StaticResource nullToBool}}"/>
                                    <ListBox x:Name="LoreListBox" ItemsSource="{Binding EditLore}" Background="Transparent" Grid.Row="4" Grid.ColumnSpan="4"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox Width="250" HorizontalAlignment="Stretch" Text="{Binding Lore}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <TextBlock Text="Enchants" Grid.Row="5"/>
                                    <Button Content="Add Enchant" Grid.Row="5" Grid.Column="2" x:Name="AddEnchantButton" Click="AddEnchantButton"/>
                                    <Button Content="Remove Enchant" Grid.Row="5" Grid.Column="3" x:Name="RemoveEnchantButton" Click="RemoveEnchantButton" DataContext="{Binding ElementName=EnchantsListBox}" IsEnabled="{Binding SelectedItem, ElementName=EnchantsListBox, Converter={StaticResource nullToBool}}"/>
                                    <ListBox x:Name="EnchantsListBox" ItemsSource="{Binding Enchants}" Background="Transparent" Grid.Row="6" Grid.ColumnSpan="4">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox Width="70" Text="{Binding Strength}"/>
                                                    <ComboBox Width="175" ItemsSource="{Binding Source={converters:Enum {x:Type itemData:MinecraftEnchants}}}" SelectedItem="{Binding Enchant}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </ScrollViewer>
        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Grid.Row="1">
            <Button Content="Save All" HorizontalAlignment="Right" Click="SaveAll_Click" />
            <Button x:Name="Button" Content="Add New Crate" Width="Auto" Click="AddCrate"/>
        </StackPanel>
        <StackPanel Grid.Column="1" Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">
            <Button IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=CratePanel}" x:Name="button" Content="Stats" HorizontalAlignment="Left" VerticalAlignment="Top" Click="StatsButtonClick"/>
            <Button IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=CratePanel}" Content="Export Crate" Click="ExportCrate" />
            <Button IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=CratePanel}" Content="Save Crate" Click="SaveCrate" />
            <Button IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=CratePanel}" Content="Delete Crate" Click="DeleteCrate"/>
        </StackPanel>
        <StackPanel Grid.Column="2" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button IsEnabled="{Binding DataContext, Converter={StaticResource nullToBool}, ElementName=RewardPanel}" Content="Edit Macros" Click="EditMacros"/>
        </StackPanel>
    </Grid>
</Window>
